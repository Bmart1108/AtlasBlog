@using AtlasBlog.Enums
@using Microsoft.AspNetCore.Identity

@inject UserManager<BlogUser> _userManager
@inject AtlasBlog.Services.Interfaces.IImageService _imageService

@model AtlasBlog.Models.BlogPost

@{
    ViewData["Title"] = "Details";
}

<div class="d-flex justify-content-center">
    <h2 class="px-5 fw-bold" style="color:seagreen">
        @*  @Html.DisplayNameFor(model => model.Title)*@
        @Html.DisplayFor(model => model.Title)
    </h2>
</div>








<article class="mb-4">
    <div class="container px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">

            <div class="col-md-10 col-lg-8 col-xl-7">
                <div class="d-flex container-fluid justify-content-center">
                    <div class="form-group">
                        @if (Model?.ImageData != null)
                        {
                            <img src="@_imageService.ConvertByteArrayToFile(Model.ImageData, Model.ImageType)" class="img-fluid" />
                        }
                    </div>
                </div>

                <p>@Html.Raw(Model.Body)</p>

            </div>
        </div>
    </div>
</article>

<h3 class="fw-bold px-5" style="color:seagreen">Blog Post Information</h3>
<ul class="px-5">

    <li>
        @Html.DisplayNameFor(model => model.Created)
        @Html.DisplayFor(model => model.Created)
    </li>
    <li>
        @Html.DisplayNameFor(model => model.Updated)
        @Html.DisplayFor(model => model.Updated)
    </li>
    <li>
        @Html.DisplayNameFor(model => model.Blog)
        @Html.DisplayFor(model => model.Blog.BlogName)
    </li>
</ul>




<hr />

@if (User.Identity!.IsAuthenticated)
{
    <div class='d-flex container-fluid justify-content-center'>
        <div class="col-md-8 py-2">
            <form asp-controller="Comments" asp-action="Create">
                <input type="hidden" asp-for="Slug">
                <input type="hidden" name="BlogPostId" value=@Model.Id>
                <textarea class="form-control" name="CommentBody" rows=10 placeholder="Add Comment"></textarea>
                <div class="d-flex justify-content-center">
                    <button class="btn btn-outline-success border-3  mt-2 py-2">SUBMIT</button>
                </div>
            </form>
        </div>
    </div>

}
else
{
    <a class="nav-link text-dark fw-bold text-black" asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Url.Action("Details", "BlogPosts", new { slug = Model.Slug })">Login to add a comment</a>
}

<hr />

<div class="d-flex container justify-content-center">

    <div class="card border-success border-3 mb-3" id="CommentSection">
        @foreach (var comment in Model.Comments.OrderByDescending(c => c.UpdatedDate))
        {

            <div class="targetParent card-header bg-transparent border-success" style="font-size:smaller">



                <div class="float-start">Author: @comment.Author?.FullName |</div>
                @if (comment.ModeratedDate is null)
                {
                    <div class="float-end">| Created on: @comment.CreatedDate.ToString("MMM dd, yyyy")</div>
                }
                else
                {
                    <span class="float-end text-danger fst-italic">Moderated on: @comment.ModeratedDate?.ToString("MMM dd, yyyy")</span>
                }
            </div>
            <div class="card-body text-success">
                @if (comment.ModeratedDate is null)
                {
                    <h5 class="card-title">@comment.CommentBody</h5>
                }
                else
                {
                    <h6 class="text-danger fst-italic">Moderation Reason: @comment.ModerationReason</h6>
                    <h5 class="card-title">@comment.ModeratedBody <span class="fst-italic text-muted ms-2">(modified...)</span></h5>
                }


            </div>
            @if (comment.ModeratedDate is null && (comment.AuthorId == _userManager.GetUserId(User)))
            {
                <div class="card-footer">
                    <div class="row row-cols-1 row-cols-md-2 g-2">
                        <div class="col">
                            <button class="btnModal btn btn-dark btn-sm w-100" data-commentId=@comment.Id data-bs-toggle="modal" data-bs-target="#editCommentModal">EDIT</button>
                        </div>
                        <div class="col">
                            @*SweetAlert Window*@
                            <button class="btnSwal btn btn-danger btn-sm w-100" data-commentId=@comment.Id>DELETE</button>
                        </div>
                    </div>
                </div>
            }
            <div class="card-footer bg-transparent border-success">
                @if (User.IsInRole("Moderator"))
                {
                    
                    <div class="card-footer">
                        <div class="row row-cols-1 g-2">
                            <div class="col">
                                <button class="btnModModal btn btn-dark btn-sm w-100" data-commentId=@comment.Id data-bs-toggle="modal" data-bs-target="#moderateCommentModal">MODERATE</button>
                            </div>
                        </div>
                    </div>
                }
            </div>

        }
    </div>

</div>




















<div class="px-5">
    @if (User.IsInRole("Administrator"))
    {
        <a asp-action="Edit" asp-route-id="@Model?.Id">Edit |</a>
        <a asp-action="Delete" asp-route-id="@Model?.Id">Delete |</a>
    }
    <a asp-action="Index">Back to List</a>
</div>



@*Load up all my modals here...*@
<div class="modal fade" id="editCommentModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel1">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="Edit" asp-controller="Comments">
                    <input type="hidden" name="Id" id="modalCommentId" />
                    <input type="hidden" asp-for="Slug" />

                    <div class="form-group">
                        <label class="control-label">Comment</label>
                        <textarea class="form-control" rows=10 name="CommentBody" id="modalCommentBody"></textarea>
                    </div>

                    <div class="form-group">
                        <button class="btn btn-sm btn-warning btn-outline-dark fw-bold w-100 fw-bold">EDIT</button>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-warning btn-outline-dark fw-bold" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="moderateCommentModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel2" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel2">Moderating Comment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                @*1. Display a read-only version of the original body
                    2. A text area for collecting the Moderated Body
                    3. Select List of Mod Reasons
                *@
                <form asp-action="Moderate" asp-controller="Comments">
                    <input type="hidden" name="Id" id="modalModerateCommentId" />

                    <div class="form-group">
                        <label class="control-label">Original Body</label>
                        <textarea id="modalModerateCommentBody" rows=5 class="form-control" readonly></textarea>
                    </div>

                    <div class="form-group">
                        <label class="control-label">Moderated Body</label>
                        <textarea name="ModeratedBody" rows=5 class="form-control"></textarea>
                    </div>

                    <div class="form-group">
                        <label class="control-label">Moderation Reason</label>
                        <select class="form-control" name="ModerationReason" asp-items="@Html.GetEnumSelectList<ModerationReason>()"></select>
                    </div>

                    <div class="form-group">
                        <button class="btn btn-sm btn-warning btn-outline-dark w-100 fw-bold">SAVE</button>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@*One form to handle all Comment dewletes on this page which is why we have to programmatically
    insert the data*@
<form name="frmDeleteComment" asp-action="Delete" asp-controller="Comments">
    <input type="hidden" name="Id" id="deleteCommentId" />
</form>

@section Scripts {

<script src="~/lib/jquery/dist/jquery.min.js"></script>

<script>
    document.querySelectorAll("button.btnSwal").forEach(btn => {
        btn.addEventListener("click", function(){
            document.getElementById("deleteCommentId").value = this.getAttribute('data-CommentId');
            DeleteComment();
        });
    });
    function DeleteComment(){

            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
            }).then((result) => {
                if (result.isConfirmed) {
                Swal.fire({
                    title: 'Deleted!',
                    text: 'Your comment has been deleted.',
                    icon: 'success',
                    showConfirmButton: false
                })
                setTimeout(function(){
                    document.frmDeleteComment.submit();
                }, 3000);

                }
            })
    }
</script>

<script>
    document.querySelectorAll("button.btnModal").forEach(btn => {
        btn.addEventListener("click", function(){
            //Thing 1: Get the Id of the comment into the Modal
            document.getElementById('modalCommentId').value = this.getAttribute('data-commentId');
            //Thing 2: Get the CommentBody into the modal
            let parent = this.closest("div.targetParent");
            let child = parent.querySelector("div.targetChild h5");
            document.getElementById('modalCommentBody').innerText = child.innerText;
        });
    });
</script>

<script>
    document.querySelectorAll("button.btnModModal").forEach(btn => {
       btn.addEventListener("click", function(){

           //Thing 1: Get the Id of the comment into the Modal
           document.getElementById('modalModerateCommentId').value = this.getAttribute('data-commentId');
           //Thing 2: Get the original CommentBody into the read only textarea of the modal
           let parent = this.closest("div.targetParent");
           let child = parent.querySelector("div.targetChild h5");
           document.getElementById('modalModerateCommentBody').innerText = child.innerText;
       });
    });
</script>

    }
